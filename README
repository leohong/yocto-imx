This README file contains information on the contents of the
fwupgrader layer.

Please see the corresponding sections below for details.


Dependencies
============

This layer depends on:

  URI: git://git.openembedded.org/bitbake
  branch: master

  URI: git://git.openembedded.org/openembedded-core
  layers: meta
  branch: master

  URI: git://git.yoctoproject.org/xxxx
  layers: xxxx
  branch: master


Patches
=======

Please submit any patches against the fwupgrader layer to the
xxxx mailing list (xxxx@zzzz.org) and cc: the maintainer:

Maintainer: XXX YYYYYY <xxx.yyyyyy@zzzzz.com>


Table of Contents
=================

  I. Adding the fwupgrader layer to your build
 II. Misc
III. Environment setup


I. Adding the fwupgrader layer to your build
=================================================

--- replace with specific instructions for the fwupgrader layer ---

In order to use this layer, you need to make the build system aware of
it.

Assuming the fwupgrader layer exists at the top-level of your
yocto build tree, you can add it to the build system by adding the
location of the fwupgrader layer to bblayers.conf, along with any
other layers needed. e.g.:

  BBLAYERS ?= " \
    /path/to/yocto/meta \
    /path/to/yocto/meta-poky \
    /path/to/yocto/meta-yocto-bsp \
    /path/to/yocto/meta-myproject \
    "


II. Misc
========

--- replace with specific information about the myproject layer ---

III. Environment setup
========

# i.MX Yocto Project
###### tags: `Linux`,`Yocto`
## Host packages 
```shell=
$ sudo apt-get install gawk wget git-core diffstat unzip texinfo gcc-multilib build-essential chrpath socat libsdl1.2-dev
$ sudo apt-get install libsdl1.2-dev xterm sed cvs subversion coreutils texi2html docbook-utils python-pysqlite2 help2man make gcc g++ desktop-file-utils libgl1-mesa-dev libglu1-mesa-dev mercurial autoconf automake groff curl lzop asciidoc
$ sudo apt-get install u-boot-tools
$ sudo apt-get install repo
```
## Setting up the repo utility
```shell=
$ mkdir ~/bin (this step may not be needed if the bin folder already exists)
$ curl http://commondatastorage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
$ chmod a+x ~/bin/repo
```
2. Add the following line to the .bashrc file to ensure that the ~/bin folder is in your PATH variable.
```
export PATH=~/bin:$PATH
```
## Setup Git Account
```shell=
$ git config --global user.name "Your Name"
$ git config --global user.email "Your Email"
$ git config --list
```
## Download the Freescale Yocto Project Community BSP recipe layers.
```shell=
$ mkdir fsl-release-bsp
$ cd fsl-release-bsp
$ repo init -u https://source.codeaurora.org/external/imx/imx-manifest -b imx-linux-rocko -m imx-4.9.88-2.0.0_ga.xml
$ repo sync
```
## Build scenarios
```shell=
$ DISTRO=fsl-imx-x11 MACHINE=imx6qsabresd source fsl-setup-release.sh -b build-x11
$ bitbake fsl-image-validation-imx
```
